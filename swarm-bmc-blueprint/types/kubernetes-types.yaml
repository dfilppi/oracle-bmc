node_types:

  bmc.nodes.Server: 
    derived_from: cloudify.nodes.Compute
    properties:
      bmc_config:
        default: {}
      resource_id:
        description: instance name
        type: string
      use_external_resource:
        type: boolean
        default: false
      ssh_keyfile:
        description: public key file for instance
        type: string
      image:
        description: instance image id
        type: string
      shape:
        description: machine shape
        type: string
      compartment_id:
        type: string
      availability_domain:
        type: string
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/start_server.rb
        delete:
          implementation: scripts/delete_instance.rb
 
  bmc.nodes.Network:
    derived_from: cloudify.nodes.Network
    properties:
      bmc_config:
        default: {}
      resource_id:
        type: string
      use_external_resource:
        type: boolean
        default: false
      cidr_block:
        type: string
      compartment_id:
        type: string
      security_rules:
        description: list of string of format "<src-cidr>,<port>" (assumes tcp)
        default: []
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/create_network.rb
          executor: central_deployment_agent
        delete:
          implementation: scripts/delete_network.rb
          executor: central_deployment_agent

  bmc.nodes.Subnet:
    derived_from: cloudify.nodes.Subnet
    properties:
      bmc_config:
        default: {}
      resource_id:
        type: string
      use_external_resource:
        type: boolean
        default: false
      cidr_block:
        type: string
      compartment_id:
        type: string
      availability_domain:
        type: string
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/create_subnet.rb
          executor: central_deployment_agent
        delete:
          implementation: scripts/delete_subnet.rb
          executor: central_deployment_agent

  bmc.nodes.Gateway:
    derived_from: cloudify.nodes.Router
    properties:
      bmc_config:
        default: {}
      resource_id:
        type: string
      use_external_resource:
        type: boolean
        default: false
      compartment_id:
        type: string
      route_cidrs:
        default: []
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/create_gateway.rb
          executor: central_deployment_agent

#
# TODO: flesh out when non-fabric impl
#  # Firewalld config
#  bmc.nodes.Firewall:
#    derived_from: cloudify.nodes.SoftwareComponent
#    properties:
#      allow_rules:
#        description: rules allowing traffic per port. Syntax: <port>/<protocol> (e.g.  8080/tcp)
#        default: []
#      deny_rules:
#        description: rules denying traffic per port. Syntax: <port>/<protocol> (e.g.  8080/tcp)
#        default: []
#    interfaces:
#      cloudify.interfaces.lifecycle:
#        start:
#          implementation: scripts/create_gateway.rb
      

relationships:

  bmc.relationships.gateway_connected_to_network:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: scripts/connect_network_to_gateway.rb
          executor: central_deployment_agent

  bmc.relationships.server_connected_to_subnet:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: scripts/connect_server_to_subnet.rb
          executor: central_deployment_agent

  bmc.relationships.subnet_connected_to_network:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: scripts/connect_subnet_to_network.rb
          executor: central_deployment_agent


tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - types/kubernetes-types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml

dsl_definitions:
  bmc_config: &bmc_config
    user: ocid1.user.oc1..aaaaaaaams6ntkm4d4f7fy55uas2u7jtgzf3zwoebmukrovxygpuc3lef3kq
    fingerprint: 42:15:9c:16:0e:34:bc:a3:be:83:31:fb:6c:9f:42:93
    private_key_file: /home/opc/.ssh/bmcs_api_key
    public_key_file: /home/opc/.ssh/bmcs_api_key.pub
    tenancy: ocid1.tenancy.oc1..aaaaaaaahkcwqbdj6em7q33sd4ahxxdwinwnx6pmucuh3n4nnhu3y4zn23ha
    region: us-phoenix-1

inputs:
  ssh_user:
    default: opc
  ssh_keyfile:
    default: /home/opc/.ssh/dfilppi-dc.key
  master_key:
    default: /home/opc/.ssh/dfilppi-dc.key.pub
  worker_key:
    default: /home/opc/.ssh/dfilppi-dc.key.pub
  master_image:
    description: image
    default: ocid1.image.oc1.phx.aaaaaaaarfjsb62lmbim56opxkrvu45dk4yhltlssxp5cx73fwh2xzxb76na
  master_shape:
    description: flavor
    default: BM.Standard1.36
  worker_image:
    description: image
    default: ocid1.image.oc1.phx.aaaaaaaarfjsb62lmbim56opxkrvu45dk4yhltlssxp5cx73fwh2xzxb76na
  worker_shape:
    description: flavor
    default: BM.Standard1.36
  availability_domain:
    description: availability domain
    default: vNkz:PHX-AD-2

node_templates:

  master:
    type: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: fabric.fabric_plugin.tasks.run_commands
          inputs:
            fabric_env:
              host_string: { get_attribute: [ master_host, public_ip ] }
              user: { get_input: ssh_user }
              key_filename: { get_input: ssh_keyfile }
            commands:
              - "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
              - "chmod +x kubectl"
              - "sudo setenforce 0"
              - "sudo systemctl disable firewalld"
              - "sudo systemctl stop firewalld"
              - "sudo yum install -y git"
              - "rm -rf kube-deploy"
              - "git clone https://github.com/kubernetes/kube-deploy"
              - "cd kube-deploy/docker-multinode;sudo ./master.sh"
    relationships:
      - type: cloudify.relationships.contained_in
        target: master_host

  worker:
    type: cloudify.nodes.SoftwareComponent
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: fabric.fabric_plugin.tasks.run_commands
          inputs:
            fabric_env:
              host_string: { get_attribute: [ worker_host, public_ip ] }
              user: { get_input: ssh_user }
              key_filename: { get_input: ssh_keyfile }
            commands:
              - "sudo yum install -y git"
              - "rm -rf kube-deploy"
              - "git clone https://github.com/kubernetes/kube-deploy"
              - { concat: [ "cd kube-deploy/docker-multinode;sudo MASTER_IP=", { get_attribute: [ master_host, private_ip ] }," ./worker.sh" ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: master
      - type: cloudify.relationships.contained_in
        target: worker_host

  master_host:
    type: bmc.nodes.Server
    properties:
      install_agent: false
      bmc_config: *bmc_config
      ssh_keyfile: { get_input: master_key}
      resource_id: master
      image: { get_input: master_image }
      shape: { get_input: master_shape }
      compartment_id: ocid1.tenancy.oc1..aaaaaaaahkcwqbdj6em7q33sd4ahxxdwinwnx6pmucuh3n4nnhu3y4zn23ha
      availability_domain: { get_input: availability_domain }
    relationships:
      - type: bmc.relationships.server_connected_to_subnet
        target: subnet

  worker_host:
    type: bmc.nodes.Server
    properties:
      install_agent: false
      bmc_config: *bmc_config
      ssh_keyfile: { get_input: worker_key}
      resource_id: worker
      image: { get_input: worker_image }
      shape: { get_input: worker_shape }
      compartment_id: ocid1.tenancy.oc1..aaaaaaaahkcwqbdj6em7q33sd4ahxxdwinwnx6pmucuh3n4nnhu3y4zn23ha
      availability_domain: { get_input: availability_domain }
    relationships:
      - type: bmc.relationships.server_connected_to_subnet
        target: subnet

  network:
    type: bmc.nodes.Network
    properties:
      bmc_config: *bmc_config
      resource_id: "kubernetes_network"
      cidr_block: "10.10.0.0/16"
      compartment_id: ocid1.tenancy.oc1..aaaaaaaahkcwqbdj6em7q33sd4ahxxdwinwnx6pmucuh3n4nnhu3y4zn23ha
      security_rules: 
        - "0.0.0.0/0,8080"
        - "10.10.0.0/24,2379"

  subnet:
    type: bmc.nodes.Subnet
    properties:
      bmc_config: *bmc_config
      resource_id: kubernetes_subnet
      cidr_block: 10.10.0.0/24
      compartment_id: ocid1.tenancy.oc1..aaaaaaaahkcwqbdj6em7q33sd4ahxxdwinwnx6pmucuh3n4nnhu3y4zn23ha
      availability_domain: { get_input: availability_domain }
    relationships:
      - type: bmc.relationships.subnet_connected_to_network
        target: network

  gateway:
    type: bmc.nodes.Gateway
    properties:
      resource_id: kubernetes_gateway
      bmc_config: *bmc_config
      compartment_id: ocid1.tenancy.oc1..aaaaaaaahkcwqbdj6em7q33sd4ahxxdwinwnx6pmucuh3n4nnhu3y4zn23ha
      route_cidrs:
        - 0.0.0.0/0
    relationships:
      - type: bmc.relationships.gateway_connected_to_network
        target: network

